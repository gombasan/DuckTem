<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ducktem.web.dao.ProductDao">
    <insert id="save" parameterType="com.ducktem.web.entity.Product" useGeneratedKeys="true" keyProperty="id">

        INSERT INTO `ducktemdb`.`Product` (`price`, `description`, `name`, `regMemberId`, `deliveryType`, `categoryId`,`condition`)
        VALUES (#{price}, #{description} , #{name}, #{regMemberId}, #{deliveryType}, #{categoryId}, #{condition});

    </insert>
    
    <select id="findId" resultType="Long">
        select last_insert_id() `Product`;
    </select>

    <select id="getPreviewAll" resultType="com.ducktem.web.entity.ProductPreview">
		select pi.name thumbNailImg, p.price, p.regDate, p.id productId ,p.name
		from Product_image pi 
		inner join Product p on pi.productId = p.id
        order by regDate desc ;
    </select>

    <select id="findById" resultType="com.ducktem.web.entity.Product" parameterType="Long">
        select * from Product where id = #{productId};

    </select>

    <select id="findMemberProductList" resultType="com.ducktem.web.entity.ProductPreview" parameterType="String">
        select pi.name thumbNailImg, p.price, p.regDate, p.id productId ,p.name, p.regMemberId
        from Product_image pi
        inner join Product p on pi.productId = p.id where p.regMemberId = #{memberId}
        order by regDate desc;
    </select>

    <update id="plusHit" parameterType="Long">
        update Product set hit = hit+1 where id = #{productId};

    </update>
</mapper>